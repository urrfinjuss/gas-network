#! /usr/bin/octave -qf

function generate_init_pipe(fname, dx, length, pressure, flux)
# generates the set of boundary data at the nodes of the network
# for the fixed pressure nodes.
# input:
#   n         number of network nodes, 
#   tmax      max time, hours
#
# the default time increment is 1.0 second.


	nsteps = 1000.*length/dx;
	fh = fopen(fname,"w");
	if (fh ~= -1)
		fprintf(fh, "# 1. x, km 2. Pressure, MPa 3. Flux, kg/m^2/s\n");
		fprintf(fh, "# Auto generated by octave script: generate_bc_pipes.x\n\n");
		for k = 0:nsteps
	  	fprintf(fh, "%.12e\t%.12e\t%.12e\n", 1.0e-03*k*dx, pressure, flux);
		end
		fclose(fh);
		fprintf("Data file written to: %s\n", fname);
	else 
		fprintf("Could not create file: %s\n", fname);
	endif

end

conf = "../../python.cfg";
pr = [6.5, 6.5, 6.5, 6.5]*1.0e+06;
fl = [100., 60., 40, 10];

fh = fopen(conf, "r");
if (fh)
  while (~feof(fh))
		line = fgets(fh);
  	[value1, value2] = sscanf(line, "%s\t%s", "C");
		if     (strcmp("name=", value1)) network = value2;
		elseif (strcmp("step=", value1)) dx = str2num(value2);
		endif
	endwhile
  fclose(fh);
else
  fprintf("Could not find base configuration file: %s", conf);
	exit(0);
endif
network = strcat("../../", network);

fprintf("Call: generate_bc_pipes.x\n");
fprintf("Space discretization:\t\t%.2f meters\n", dx);
fh = fopen(network, "r");
if (fh ~= -1) 
	txt = fgetl(fh);
	[nN, nP, nC] = sscanf(txt, "%d\t%d\t%d", "C");
	for j = 1:nN
		txt = fgetl(fh);
	endfor
	for j = 1:nP
		txt = fgetl(fh);
		[id, ~, ~, wid, len] = sscanf(txt, "%d\t%d\t%d\t%lf\t%lf\t%d", "C");
		fname = sprintf("../ic/data_%03d.txt", id);
		generate_init_pipe(fname, dx, len, 1.0e-06*pr(j), fl(j))
	endfor
else
	fprintf("Cannot find network configuration file.\n");
	exit(0);
endif


